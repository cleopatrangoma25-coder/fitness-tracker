name: Security & Dependency Management

on:
  schedule:
    # Run security checks daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '10.13.1'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run security audit
        run: pnpm run security:audit
        
      - name: Run dependency check
        run: pnpm run deps:check
        
      - name: Upload security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-report
          path: |
            npm-audit.json
            dependency-report.txt
          retention-days: 30

  dependency-updates:
    name: Dependency Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '10.13.1'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Check for updates
        id: check-updates
        run: |
          pnpm run deps:check > dependency-report.txt
          if grep -q "All dependencies match the latest package versions" dependency-report.txt; then
            echo "updates_available=false" >> $GITHUB_OUTPUT
          else
            echo "updates_available=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Create Pull Request for updates
        if: steps.check-updates.outputs.updates_available == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'ðŸ”§ Automated Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates to keep the project secure and up-to-date.
            
            ### Changes
            - Updated outdated dependencies
            - Security patches applied
            - Performance improvements
            
            ### Testing
            - [ ] All tests pass
            - [ ] No breaking changes
            - [ ] Security audit passes
            
            ---
            *This PR was automatically generated by GitHub Actions*
          branch: chore/dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated
            security

  code-scanning:
    name: Code Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '10.13.1'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run ESLint security rules
        run: pnpm run lint
        
      - name: Run TypeScript type checking
        run: pnpm run typecheck
        
      - name: Run tests
        run: pnpm run test
        
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: security-results.sarif

  container-scanning:
    name: Container Scanning
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'node:22-alpine'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  notify-security-issues:
    name: Notify Security Issues
    runs-on: ubuntu-latest
    needs: [security-audit, dependency-updates]
    if: always() && (needs.security-audit.result == 'failure' || needs.dependency-updates.result == 'success')
    
    steps:
      - name: Notify team
        uses: 8398a7/action-slack@v3
        if: needs.security-audit.result == 'failure'
        with:
          status: failure
          text: |
            ðŸš¨ Security audit failed for ${{ github.repository }}
            
            Please review the security report and address any vulnerabilities.
            
            Workflow: ${{ github.workflow }}
            Run: ${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Notify dependency updates
        uses: 8398a7/action-slack@v3
        if: needs.dependency-updates.result == 'success'
        with:
          status: success
          text: |
            ðŸ”§ Dependency updates available for ${{ github.repository }}
            
            A pull request has been created with the latest dependency updates.
            
            Workflow: ${{ github.workflow }}
            Run: ${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 